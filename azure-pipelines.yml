# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
    include: 
    - main
 paths:
    include: 
    - src/web/*

pool:
  vmImage: windows-latest

variables:
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.csproj'
- name: BuildParameters.TestProjects
  value: '**/*[Tt]ests/*.csproj'
name: $(date:yyyyMMdd)$(rev:.r)
jobs:
- job: Job_1
  displayName: Agent job 1
  pool:
    name: Neotechagentpool
  steps:
  - checkout: self
    persistCredentials: true

  - script: |
     git config --global user.email pipeline@demo.com & git config --global user.name "Pipeline
     workingDirectory: $(System.DefaultWorkingDirectory)

  - script: |
     git checkout -b master
     echo 'This is a test' > data.txt
     git add -A
     git commit -m "deployment $(Build.BuildNumber)"
     git push --set-upstream origin master
    displayName: Add data.txt file
    workingDirectory: $(System.DefaultWorkingDirectory)
  - checkout: self
    clean: true
    fetchTags: false
  - task: CmdLine@2
    displayName: Command Line Script
    inputs:
      script: |
        echo Write your commands here
        
        echo Hello world
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      ConnectedServiceName: 2705cb0f-ebde-48ae-8433-0bd091c66eca
      command: restore
      projects: $(BuildParameters.RestoreBuildProjects)
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      ConnectedServiceName: 2705cb0f-ebde-48ae-8433-0bd091c66eca
      projects: $(BuildParameters.RestoreBuildProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Test
    enabled: False
    inputs:
      ConnectedServiceName: 2705cb0f-ebde-48ae-8433-0bd091c66eca
      command: test
      projects: $(BuildParameters.TestProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      ConnectedServiceName: 2705cb0f-ebde-48ae-8433-0bd091c66eca
      command: publish
      publishWebProjects: True
      projects: $(BuildParameters.RestoreBuildProjects)
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
